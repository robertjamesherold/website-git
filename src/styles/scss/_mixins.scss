@use '@scss/_variables.scss' as *;


// 1. Basis-Styling für alle Buttons
@mixin button-base
{
    font-size: $fs16;

    padding: $space1 $space2;

    transition: all .2s ease;

    border-radius: $bR1;

    &:hover
    {
        text-decoration: none;
    }
}

// 2. Variant-Styling: $type = primary | secondary, $style = filled | outlined
@mixin button-variant($type, $style)
{
    @if $style == filled
    {
        @if $type == primary
        {
            color: rgb($codeBgPri);
            background-color: rgb($codeBlue);

            &:hover
            {
                background-color: rgb($codeBlue);
            }

            &:active
            {
                background-color: rgb($codeLila);
            }
        }

        @else if $type == secondary
        {
            color: rgb($codeBgPri);
            background-color: rgb($codeRed);

            &:hover
            {
                background-color: rgb($codeRed)L;
            }

            &:active
            {
                background-color: rgb($codeRed)D;
            }
        }
    }

    @else if $style == outlined
    {
        background-color: transparent;

        @if $type == primary
        {
            color: var(--clr-primary);
            border: 1px solid var(--clr-primary);

            &:hover
            {
                color: var(--clr-primary-dark);
                border-color: var(--clr-primary-dark);
                background-color: var(--clr-primary-light-hover);
            }

            &:active
            {
                background-color: var(--clr-primary-dark-hover);
            }
        }

        @else if $type == secondary
        {
            color: var(--clr-secondary);
            border: 1px solid var(--clr-secondary);

            &:hover
            {
                color: var(--clr-secondary-dark);
                border-color: var(--clr-secondary-dark);
                background-color: var(--clr-secondary-light-hover);
            }

            &:active
            {
                background-color: var(--clr-secondary-dark-hover);
            }
        }
    }
}
@mixin card
{
    padding: $space2;

    transition: all .3s ease-in-out;

    border: $border1;
    border-radius: $bR1;
    background-color: rgb($codeBgSec);

    &:hover
    {
        transform: translateY(-6px);

        border-color: rgb($codeBlue);
        box-shadow: $shadLg;
    }
}
@mixin tags
{
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;

    height: space100;
    margin-top: $space2;

    gap: $space0n5;
}
@mixin tag
{
    font-size: $fs16;
    font-weight: $fw5;

    display: inline-block;

    padding: $space0n25 $space0n75;

    color: rgb($codeBlueDark);
    border-radius: $bR1 / 2;
    background-color: rgba($codeBlueBright, .3);
}

@mixin cardicon
{
    display: block;

    margin-bottom: $space1;
}

@mixin cardtitle
{
    font-size: $fs1;
    font-weight: $fw6;
    line-height: $tightH;

    margin-bottom: $space0n75;

    color: rgb($codeTextPri);
}
@mixin metaCardLabel
{
    .metaLabel
    {
        font-size: $fs14;
        font-weight: $fw6;

        margin-top: $space0n5;
        margin-bottom: $space0n25;

        letter-spacing: .5px;
        text-transform: uppercase;

        color: rgb($codeTextTer);
    }
    .metalabel:nth-of-type(1)
    {
        margin-right: $space0n5;

        color: rgb($codeBlue);
    }
}

@mixin carddescription
{
    font-size: $fs16;
    line-height: $baseH;
    // Optional: Maximale Breite setzen

    max-width: 100%;
    margin: 0;
    // Lange Wörter umbrechen

    word-wrap: break-word;
    -webkit-hyphens: auto;
    hyphens: auto;

    color: rgb($codeTextPri);

    -ms-hyphens: auto;
    overflow-wrap: break-word;
}
@mixin gridtwo
{
    display: grid;

    width: $space100;

    grid-template-columns: 1fr;
    gap: $space2;


    @media (min-width: $lg)
    {
        grid-template-columns: repeat(2, 1fr);
        gap: $space1n5;
    }

    &.animated .Card
    {
        animation: fadeInUp .8s ease-out both;
    }
}

@mixin halfgrid
{
    display: grid;

    width: $space100;

    grid-template-columns: 1fr;
    gap: $space2;

    @media (min-width: $sm)
    {
        width: $space50;
    }
}

@mixin grid
{
    display: grid;

    width: $space100;

    grid-template-columns: 1fr;
    gap: $space2;


    @media (min-width: $sm)
    {
        grid-template-columns: repeat(2, 1fr);
    }

    &.animated .Card
    {
        animation: fadeInUp .8s ease-out both;
    }
}

@mixin gridfour
{
    display: grid;

    grid-template-columns: 1fr;
    gap: $space2;

    @media (min-width: $sm)
    {
        grid-template-columns: repeat(2, 1fr);
    }

    @media (min-width: $lg)
    {
        grid-template-columns: repeat(4, 1fr);
        gap: $space1n5;
    }

    &.animated .Card
    {
        animation: fadeInUp .8s ease-out both;
    }
}

@mixin gridthree
{
    display: grid;

    grid-template-columns: 1fr;
    gap: $space2;

    @media (min-width: $sm)
    {
        grid-template-columns: repeat(2, 1fr);
    }

    @media (min-width: $lg)
    {
        grid-template-columns: repeat(3, 1fr);
        gap: $space1n5;
    }

    &.animated .Card
    {
        animation: slideInUp .6s ease-out both;
    }
}

@mixin section
{
    justify-content: center;

    width: $space100;
    margin-bottom: $space5;

    &:last-of-type
    {
        margin-bottom: $space4;
    }
}
@mixin sectionTitle
{
    font-size: $fs5;
    font-weight: $fw7;
    line-height: $tightH;

    position: relative;

    margin-bottom: $space3;

    text-align: center;

    color: rgb($codeTextPri);

    &::after
    {
        position: absolute;
        bottom: -$space0n75;
        left: 50%;

        width: 80px;
        height: 4px;

        content: '';
        transform: translateX(-50%);

        border-radius: $bR4;
        background: linear-gradient(90deg, rgb($codeBlue), rgb($codeLila));
    }

    @media (min-width: $lg)
    {
        text-align: left;

        &::after
        {
            left: 0;

            transform: none;
        }
    }
}
@mixin bigCard
{
    overflow: hidden;

    transition: all .3s ease-in-out;

    border: $border1;
    border-radius: $bR1;
    background-color: rgb($codeBgSec);
    box-shadow: $shadMd;

    &:hover
    {
        transform: translateY(-8px);border-color: rgb($codeBlue);
        box-shadow: $shadLg;
        box-shadow: $shadLg;
    }

    @media (max-width: $sm - 1px)
    {
        &:hover
        {
            transform: translateY(-4px);
        }
    }
}
@mixin bigCardTags
{
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: flex-start;

    height: space100;
    margin-top: $space2;

    gap: $space0n5;
}
@mixin metaCardTags
{
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: flex-start;

    height: space100;
    margin-top: $space0n5;

    gap: $space0n5;
}


@mixin bigCardImage
{
    position: relative;

    overflow: hidden;

    height: 250px;

    img
    {
        width: $space100;
        height: $space100;

        transition: transform .3s ease-in-out;

        object-fit: cover;
    }


    @media (max-width: $sm - 1px)
    {
        height: 200px;
    }
}

@mixin bigCardOverlay
{
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    transition: opacity .3s ease-in-out;

    opacity: 0;
    color: rgb($codeBlue);
    background: linear-gradient(135deg, rgba($codeBlue, .4), rgba($codeLila, .4));

    .Card:hover &
    {
        opacity: 1;
    }
}

@mixin viewProject
{
    font-size: $fs1;
    font-weight: $fw6;

    display: inline-flex;
    align-items: center;
    justify-content: center;

    padding: $space0n75 $space2;

    transition: all .3s ease-in-out;
    text-decoration: none;

    color: rgb($codeBlue);
    border-radius: $bR1;
    background-color: rgb($codeBgPri);
    box-shadow: $shadMd;

    &:hover
    {
        transform: translateY(-2px);

        color: rgb($codeBlue);
        background-color: rgb($codeWhite);
        box-shadow: $shadLg;
    }
}

@mixin bigCardContent
{
    padding: $space2;

    @media (min-width: $md)
    {
        padding: $space2n5;
    }

    @media (max-width: $sm - 1px)
    {
        padding: $space1n5;
    }
}


@mixin ctaButtonPrimary
{
    font-size: $fs1;
    font-weight: $fw6;

    display: inline-flex;
    align-items: center;
    justify-content: center;

    min-width: 160px;
    padding: $space1 $space2;

    transition: all .3s ease-in-out;
    text-decoration: none;

    color: rgb($codeWhite);
    border: $border2;
    border-radius: $bR1;
    background: linear-gradient(90deg,  rgb($codePink), rgb($codeOrange) ) ;
    box-shadow: $shadMd;

    &:hover
    {
        transform: translateY(-2px);

        color: rgb($codeWhite);
        background-color: rgb($codeBlue);
        box-shadow: $shadLg;
    }

    &:focus
    {
        outline: none;
        box-shadow: 0 0 0 3px rgba($codeBgPri, .3);
    }
}

@mixin ctaButtonSecondary
{
    font-size: $fs1;
    font-weight: $fw6;

    display: inline-flex;
    align-items: center;
    justify-content: center;

    min-width: 160px;
    padding: $space1 $space2;

    transition: all .3s ease-in-out;
    text-decoration: none;
    text-wrap: nowrap;

    color: rgb($codeBlue);
    border: $border2;
    border-radius: $bR1;
    background-color: rgb($codeWhite);

    &:hover
    {
        transform: translateY(-2px);

        color: rgb($codeWhite);
        background-color: rgb($codeBlue);
        box-shadow: $shadLg;
    }

    &:focus
    {
        outline: none;
        box-shadow: 0 0 0 3px rgba($codeBgPri, .3);
    }
}
